/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
            hml: home_row_mod_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < 6 7 8 9 10 11 >; // List of keys on the right side of the keyboard
                hold-trigger-on-release;
            };
            hmr: home_row_mod_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < 0 1 2 3 4 5 >; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Default Layer";
// -----------------------------------------------------------------------------------------
// | SHFT| CRTL| ALT | CMD | WDS |   | WDS | CMD | ALT | CRTL|RSHFT|
//
// |  J  |  D  |  U  |  A  |  X  |   |  P  |  H  |  L  |  M  |  ß  |
// |  C  |  T  |  I  |  E  |  O  |   |  B  |  N  |  R  |  S  |  G  |
// |  F  |  V  |  Ü  |  Ä  |  Ö  |   |  Y  |  Z  |  W  |  K  |  Q  |
//             | TAB | LWR | SPC |   | ENT | RSE | BSPC|
                        bindings = <
   &kp &kp J       &kp D       &kp U      &kp A    &kp X             &kp P       &kp H    &kp L      &kp M       &kp ß       &kp
   &kp &hml SHFT C &hml CRTL T &hml ALT I &hml 3 E &hml LGUI O       &hmr LGUI B &hmr 3 N &hmr ALT R &hmr CRTL S &hmr SHFT G &kp
   &kp &kp F       &kp V       &kp Ü      &kp Ä    &kp Ö             &kp Y       &kp Z    &kp W      &kp K       &kp Q       &kp
                               &kp TAB    &mo 1    &kp SPACE         &kp RET     &mo 2    &kp BSPC
                        >;
                };
                lower_layer {
                        display-name = "Lower Layer";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        display-name = "Raise Layer";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                cmd_layer {

                };
                snd_layer {

                };
        };
};
